---
// @ts-nocheck
import type { PostsResult } from "../../../../sanity.types";
import PostBody from "../../../components/PostBody";
import Layout from "../../../layouts/Layout.astro";
import { getPost, getPosts } from "../../../utils/groqQueries";
import { urlFor } from "../../../utils/utils";

export async function getStaticPaths() {
  const posts = await getPosts();

  return posts
    .filter(
      (post): post is PostsResult & { slug: { current: string } } =>
        post?.slug !== undefined
    )
    .map((post) => ({
      params: { slug: post.slug.current },
    }));
}

const { slug } = Astro.params;
const post: PostsResult = await getPost(slug);

if (!post) {
  throw new Error(`Post with slug '${slug}' not found`);
}
---

<Layout title={post.title}>
  {
    post.mainImage && post.mainImage.asset && (
      <img
        src={urlFor(post.mainImage).width(1400).height(600).url()}
        alt={post.mainImage.altText || "Image"}
        class="main-post-image"
        loading="lazy"
      />
    )
  }
  <article class="blog-post">
    <p id="post-date">
      {
        new Date(post._createdAt).toLocaleDateString("en-US", {
          month: "long",
          day: "numeric",
          year: "numeric",
        })
      }
    </p>
    <h1 id="post-title">{post.title}</h1>
    <p class="post-author">
      POSTED BY {post.author?.name.toUpperCase()}
    </p>
    <div class="normal-copy" id="post-content">
      {post.body && <PostBody body={post.body} client:only="react" />}
    </div>
  </article>

  <style>
    /* General layout styling */
    .blog-post {
      max-width: 60rem;
      margin: 0 auto;
    }

    /* Main image styling */
    .main-post-image {
      margin: 2em auto 4em;
      object-fit: cover;
      border-radius: 10px;
    }

    /* Title and author styling */
    #post-title {
      font-size: 3em;
      font-weight: bold;
      margin: 0.5em 0;
    }

    .post-author {
      margin-bottom: 2em;
      color: #032f7f;
      font-size: larger;
    }

    /* Date styling */
    #post-date {
      color: #cd011c;
      font-size: 1.25em;
      font-weight: bold;
      margin-bottom: 1em;
    }

    /* Content styling */
    #post-content {
      max-width: 45em;
      font-size: larger;
    }

    /* Additional reusable styles */
    .post {
      display: flex;
      align-items: flex-start;
      margin-bottom: 4em;
    }

    .post-image {
      width: 100%;
      max-width: 600px;
      height: auto;
      margin: 0 auto 0.5em auto;
      display: block;
    }

    .post-content h2 {
      margin: 0;
    }

    .post-content p {
      margin: 0.25em 0;
    }

    /* Captioned image styling */
    .captioned-image {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin: 2em 0;
    }
    .captioned-image figcaption {
      font-size: 1em;
      color: #555;
      margin-top: 0.5em;
      text-align: center;
    }
  </style>
</Layout>
